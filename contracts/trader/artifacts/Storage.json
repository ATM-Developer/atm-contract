{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"generatedSources": [],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50610172806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80634411b7611461005c57806357ff71e61461007a5780635c475d42146100825780638da5cb5b14610095578063c45a01551461009d575b600080fd5b6100646100a5565b6040516100719190610128565b60405180910390f35b6100646100b4565b610064610090366004610110565b6100c3565b6100646100ed565b610064610101565b6002546001600160a01b031681565b6001546001600160a01b031681565b600481815481106100d357600080fd5b6000918252602090912001546001600160a01b0316905081565b60005461010090046001600160a01b031681565b6003546001600160a01b031681565b600060208284031215610121578081fd5b5035919050565b6001600160a01b039190911681526020019056fea26469706673582212205cd67a45062018be67374dbb67f1897f25fd3287b79a1d66296faf558fe73a1b64736f6c63430008010033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x172 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4411B761 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x57FF71E6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x5C475D42 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x110 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xED JUMP JUMPDEST PUSH2 0x64 PUSH2 0x101 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xD6 PUSH27 0x45062018BE67374DBB67F1897F25FD3287B79A1D66296FAF558FE7 GASPRICE SHL PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
			"sourceMap": "419:195:7:-:0;;;;;;;;;;;;;;;;;;;"
		},
		"deployedBytecode": {
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:414:8",
						"statements": [
							{
								"nodeType": "YulBlock",
								"src": "6:3:8",
								"statements": []
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "84:120:8",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "130:26:8",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "139:6:8"
																},
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "147:6:8"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "132:6:8"
															},
															"nodeType": "YulFunctionCall",
															"src": "132:22:8"
														},
														"nodeType": "YulExpressionStatement",
														"src": "132:22:8"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "105:7:8"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "114:9:8"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "101:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "101:23:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "126:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "97:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "97:32:8"
											},
											"nodeType": "YulIf",
											"src": "94:2:8"
										},
										{
											"nodeType": "YulAssignment",
											"src": "165:33:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "188:9:8"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "175:12:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "175:23:8"
											},
											"variableNames": [
												{
													"name": "value0",
													"nodeType": "YulIdentifier",
													"src": "165:6:8"
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "50:9:8",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "61:7:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "73:6:8",
										"type": ""
									}
								],
								"src": "14:190:8"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "310:102:8",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "320:26:8",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "332:9:8"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "343:2:8",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "328:3:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "328:18:8"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "320:4:8"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "362:9:8"
													},
													{
														"arguments": [
															{
																"name": "value0",
																"nodeType": "YulIdentifier",
																"src": "377:6:8"
															},
															{
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "393:3:8",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "398:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "389:3:8"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "389:11:8"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "402:1:8",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "385:3:8"
																},
																"nodeType": "YulFunctionCall",
																"src": "385:19:8"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "373:3:8"
														},
														"nodeType": "YulFunctionCall",
														"src": "373:32:8"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "355:6:8"
												},
												"nodeType": "YulFunctionCall",
												"src": "355:51:8"
											},
											"nodeType": "YulExpressionStatement",
											"src": "355:51:8"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "279:9:8",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "290:6:8",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "301:4:8",
										"type": ""
									}
								],
								"src": "209:203:8"
							}
						]
					},
					"contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n}",
					"id": 8,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c80634411b7611461005c57806357ff71e61461007a5780635c475d42146100825780638da5cb5b14610095578063c45a01551461009d575b600080fd5b6100646100a5565b6040516100719190610128565b60405180910390f35b6100646100b4565b610064610090366004610110565b6100c3565b6100646100ed565b610064610101565b6002546001600160a01b031681565b6001546001600160a01b031681565b600481815481106100d357600080fd5b6000918252602090912001546001600160a01b0316905081565b60005461010090046001600160a01b031681565b6003546001600160a01b031681565b600060208284031215610121578081fd5b5035919050565b6001600160a01b039190911681526020019056fea26469706673582212205cd67a45062018be67374dbb67f1897f25fd3287b79a1d66296faf558fe73a1b64736f6c63430008010033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4411B761 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x57FF71E6 EQ PUSH2 0x7A JUMPI DUP1 PUSH4 0x5C475D42 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x95 JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x9D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x64 PUSH2 0xA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x128 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x64 PUSH2 0xB4 JUMP JUMPDEST PUSH2 0x64 PUSH2 0x90 CALLDATASIZE PUSH1 0x4 PUSH2 0x110 JUMP JUMPDEST PUSH2 0xC3 JUMP JUMPDEST PUSH2 0x64 PUSH2 0xED JUMP JUMPDEST PUSH2 0x64 PUSH2 0x101 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x121 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5C 0xD6 PUSH27 0x45062018BE67374DBB67F1897F25FD3287B79A1D66296FAF558FE7 GASPRICE SHL PUSH5 0x736F6C6343 STOP ADDMOD ADD STOP CALLER ",
			"sourceMap": "419:195:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;519:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:24;;;:::i;582:28::-;;;;;;:::i;:::-;;:::i;457:24::-;;;:::i;549:26::-;;;:::i;519:23::-;;;-1:-1:-1;;;;;519:23:7;;:::o;488:24::-;;;-1:-1:-1;;;;;488:24:7;;:::o;582:28::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;582:28:7;;-1:-1:-1;582:28:7;:::o;457:24::-;;;;;;-1:-1:-1;;;;;457:24:7;;:::o;549:26::-;;;-1:-1:-1;;;;;549:26:7;;:::o;14:190:8:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:8;;84:120;-1:-1:-1;84:120:8:o;209:203::-;-1:-1:-1;;;;;373:32:8;;;;355:51;;343:2;328:18;;310:102::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "74000",
				"executionCost": "123",
				"totalCost": "74123"
			},
			"external": {
				"factory()": "1136",
				"luca()": "1048",
				"owner()": "1125",
				"whiteList(uint256)": "2060",
				"wluca()": "1070"
			}
		},
		"methodIdentifiers": {
			"factory()": "c45a0155",
			"luca()": "4411b761",
			"owner()": "8da5cb5b",
			"whiteList(uint256)": "5c475d42",
			"wluca()": "57ff71e6"
		}
	},
	"abi": [
		{
			"inputs": [],
			"name": "factory",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "luca",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "owner",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"name": "whiteList",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "wluca",
			"outputs": [
				{
					"internalType": "address",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		}
	]
}